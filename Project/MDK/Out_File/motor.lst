C251 COMPILER V5.60.0,  motor                                                              19/07/23  21:09:11  PAGE 1   


C251 COMPILER V5.60.0, COMPILATION OF MODULE motor
OBJECT MODULE PLACED IN .\Out_File\motor.obj
COMPILER INVOKED BY: D:\c251\C251\BIN\C251.EXE ..\USER\src\motor.c XSMALL INTR2 WARNINGLEVEL(3) OPTIMIZE(0,SPEED) BROWSE
                    - INCDIR(..\..\Libraries\libraries;..\..\Libraries\seekfree_libraries;..\..\Libraries\seekfree_peripheral;..\CODE;..\USER
                    -\inc;..\USER\src;..\MDK;.\MY_LIBRARY) DEBUG PRINT(.\Out_File\motor.lst) OBJECT(.\Out_File\motor.obj) 

stmt  level    source

    1          #include "motor.h"
    2          #include "zf_pwm.h"
    3          #define ServoCenter 270
    4          
    5          uint32 ServoDuty;
    6              int32 Duty;
    7          //
    8          //PWM1 P66             PWM2 P62
    9          //DIR1 P64ÓÒÕý×ª1      DIR2 P60×óÕý×ª0
   10          //ÓÒµç»úãÐÖµ810£¬µÍÓÚ´ËãÐÖµ²»»áÆð×ª
   11          void MotorInit(void)
   12          {
   13   1          pwm_init(PWMA_CH2P_P62, 10000, 0);      //
   14   1          pwm_init(PWMA_CH4P_P66, 10000, 0);      // 
   15   1      }
   16          void ServoInit(void)
   17          {
   18   1           pwm_init(PWMB_CH1_P74, 50, 270);      //³õÊ¼»¯PWMB  Ê¹ÓÃÒý½ÅP7.4  Êä³öPWMÆµÂÊ10000HZ   Õ¼¿Õ±ÈÎª°Ù·ÖÖ
             -® pwm_duty / PWM_DUTY_MAX * 100
   19   1      }
   20          void MotorControlR(uint16 duty)
   21          {
   22   1          if(duty>=2500)
   23   1          {
   24   2              duty = 2500;
   25   2          }
   26   1      //    else if(duty<=1000)
   27   1      //    {
   28   1      //        duty = 1000;
   29   1      //    } 
   30   1          
   31   1           pwm_duty(PWMA_CH4P_P66,duty);
   32   1          
   33   1      }
   34          void MotorControlL(uint16 duty)
   35          {
   36   1          if(duty>=2500)
   37   1          {
   38   2              duty = 2500;
   39   2          }
   40   1      //    else if(duty<=1000)
   41   1      //    {
   42   1      //        duty = 1000;
   43   1      //    } 
   44   1         pwm_duty(PWMA_CH2P_P62,duty);
   45   1      }
   46          void ServoControl(int32 duty)
   47          {
   48   1      
   49   1        //ÏÞÖÆ·ùÖµ
   50   1          //ÖÐÖµ0
   51   1          if (duty >= 80)//ÓÒ×ªÏÞ·ù
   52   1          {
   53   2              duty = 80;
   54   2          }      
   55   1          else if (duty <= -80)
   56   1          {
C251 COMPILER V5.60.0,  motor                                                              19/07/23  21:09:11  PAGE 2   

   57   2              duty = -80; 
   58   2          }
   59   1          Duty = duty+ServoCenter;
   60   1          pwm_duty(PWMB_CH1_P74,Duty);//¶æ»ú
   61   1      }


Module Information          Static   Overlayable
------------------------------------------------
  code size            =       195     ------
  ecode size           =    ------     ------
  data size            =    ------     ------
  idata size           =    ------     ------
  pdata size           =    ------     ------
  xdata size           =    ------     ------
  xdata-const size     =    ------     ------
  edata size           =        16     ------
  bit size             =    ------     ------
  ebit size            =    ------     ------
  bitaddressable size  =    ------     ------
  ebitaddressable size =    ------     ------
  far data size        =    ------     ------
  huge data size       =    ------     ------
  const size           =    ------     ------
  hconst size          =    ------     ------
End of Module Information.


C251 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
