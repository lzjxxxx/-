C251 COMPILER V5.60.0,  SEEKFREE_IPS200_SPI                                                19/07/23  21:09:11  PAGE 1   


C251 COMPILER V5.60.0, COMPILATION OF MODULE SEEKFREE_IPS200_SPI
OBJECT MODULE PLACED IN .\Out_File\SEEKFREE_IPS200_SPI.obj
COMPILER INVOKED BY: D:\c251\C251\BIN\C251.EXE ..\..\Libraries\seekfree_peripheral\SEEKFREE_IPS200_SPI.c XSMALL INTR2 WA
                    -RNINGLEVEL(3) OPTIMIZE(0,SPEED) BROWSE INCDIR(..\..\Libraries\libraries;..\..\Libraries\seekfree_libraries;..\..\Librari
                    -es\seekfree_peripheral;..\CODE;..\USER\inc;..\USER\src;..\MDK;.\MY_LIBRARY) DEBUG PRINT(.\Out_File\SEEKFREE_IPS200_SPI.l
                    -st) OBJECT(.\Out_File\SEEKFREE_IPS200_SPI.obj) 

stmt  level    source

    1          /********************************************************************************************************
             -*************
    2           * COPYRIGHT NOTICE
    3           * Copyright (c) 2018,逐飞科技
    4           * All rights reserved.
    5           * 技术讨论QQ群：一群：179029047(已满)  二群：244861897(已满)  三群：824575535
    6           *
    7           * 以下所有内容版权均属逐飞科技所有，未经允许不得用于商业用途，
    8           * 欢迎各位使用并传播本程序，修改内容时必须保留逐飞科技的版权声明。
    9           *
   10           * @file                main
   11           * @company                     成都逐飞科技有限公司
   12           * @author              逐飞科技(QQ3184284598)
   13           * @version             查看doc内version文件 版本说明
   14           * @Software            MDK FOR C251 V5.60
   15           * @Taobao              https://seekfree.taobao.com/
   16           * @date                2019-11-15
   17           * @note                
   18                                                  接线定义：
   19                                                  ------------------------------------ 
   20                                                  1.14寸IPS模块管脚       单片机管脚
   21                                                  SCL                     查看SEEKFREE_IPS200_SPI.h文件内的IPS200_SCL             宏定义     硬件SPI引脚不可随意切换
   22                                                  SDA                     查看SEEKFREE_IPS200_SPI.h文件内的IPS200_SDA             宏定义     硬件SPI引脚不可随意切换
   23                                                  RES                     查看SEEKFREE_IPS200_SPI.h文件内的IPS200_REST_PIN宏定义    
   24                                                  DC                      查看SEEKFREE_IPS200_SPI.h文件内的IPS200_DC_PIN  宏定义  
   25                                                  CS                      查看SEEKFREE_IPS200_SPI.h文件内的IPS200_CS              宏定义     硬件SPI引脚不可随意切换
   26                                                  BL                                      查看SEEKFREE_IPS200_SPI.h文件内的IPS200_BL_PIN  宏定义
   27                                                  
   28                                                  电源引脚
   29                                                  VCC 3.3V电源
   30                                                  GND 电源地
   31                                                  最大分辨率240*320
   32                                                  ------------------------------------ 
   33           ********************************************************************************************************
             -************/
   34           
   35          
   36          
   37          
   38          #include "SEEKFREE_IPS200_SPI.h"
   39          #include "SEEKFREE_FONT.h"
   40          #include "SEEKFREE_PRINTF.h"
   41          #include "zf_spi.h"
   42          #include "zf_delay.h"
   43          
   44          
   45          
   46          
   47          //-------------------------------------------------------------------------------------------------------
             -------------
   48          //  以下函数是使用软件SPI通信，相比较硬件SPI，软件SPI引脚更加灵活，可以使用任意普通IO
   49          //-------------------------------------------------------------------------------------------------------
             -------------
   50          
   51          
   52          
C251 COMPILER V5.60.0,  SEEKFREE_IPS200_SPI                                                19/07/23  21:09:11  PAGE 2   

   53          //-------------------------------------------------------------------------------------------------------
             -------------
   54          //  @brief      内部调用，用户无需关心
   55          //  @param      void                
   56          //  @return                                     
   57          //  @since      v1.0
   58          //  Sample usage:               
   59          //-------------------------------------------------------------------------------------------------------
             -------------
   60          void ips200_writeIndex_simspi(uint8 dat)                        //写命令
   61          {       
   62   1              uint8 i = 8;
   63   1              IPS200_CS_SIMSPI(0);
   64   1          IPS200_DC_SIMSPI(0);
   65   1      
   66   1              IPS200_SCL_SIMSPI(0);
   67   1      
   68   1              while(i--)
   69   1              {
   70   2                      if(dat&0x80){IPS200_SDA_SIMSPI(1);}
   71   2                      else{IPS200_SDA_SIMSPI(0);}
   72   2                      IPS200_SCL_SIMSPI(1);
   73   2      
   74   2                      IPS200_SCL_SIMSPI(0);
   75   2                      dat<<=1;
   76   2              }       
   77   1              IPS200_CS_SIMSPI(1);
   78   1      }
   79          
   80          //-------------------------------------------------------------------------------------------------------
             -------------
   81          //  @brief      内部调用，用户无需关心
   82          //  @param      void                
   83          //  @return                                     
   84          //  @since      v1.0
   85          //  Sample usage:               
   86          //-------------------------------------------------------------------------------------------------------
             -------------
   87          void ips200_writeData_simspi(uint8 dat)                 //写数据
   88          {
   89   1              uint8 i = 8;
   90   1              IPS200_CS_SIMSPI(0);
   91   1          IPS200_DC_SIMSPI(1);
   92   1      
   93   1              IPS200_SCL_SIMSPI(0);
   94   1      
   95   1              while(i--)
   96   1              {
   97   2                      if(dat&0x80){IPS200_SDA_SIMSPI(1);}
   98   2                      else{IPS200_SDA_SIMSPI(0);}
   99   2                      IPS200_SCL_SIMSPI(1);
  100   2      
  101   2                      IPS200_SCL_SIMSPI(0);
  102   2                      dat<<=1;
  103   2              }       
  104   1              IPS200_CS_SIMSPI(1);
  105   1      }
  106          
  107          //-------------------------------------------------------------------------------------------------------
             -------------
  108          //  @brief      内部调用，用户无需关心
  109          //  @param      void                
  110          //  @return                                     
  111          //  @since      v1.0
  112          //  Sample usage:               
  113          //-------------------------------------------------------------------------------------------------------
C251 COMPILER V5.60.0,  SEEKFREE_IPS200_SPI                                                19/07/23  21:09:11  PAGE 3   

             -------------
  114          void ips200_writeDatai_16bit_simspi(uint16 dat) //向液晶屏写一个16位数据
  115          {
  116   1          uint8 i=16;
  117   1              IPS200_CS_SIMSPI(0);
  118   1          IPS200_DC_SIMSPI(1);
  119   1          IPS200_SCL_SIMSPI(0);
  120   1              while(i--)
  121   1              {
  122   2                      if(dat&0x8000){IPS200_SDA_SIMSPI(1);}
  123   2                      else{IPS200_SDA_SIMSPI(0);}
  124   2                      IPS200_SCL_SIMSPI(1);
  125   2                      
  126   2                      IPS200_SCL_SIMSPI(0);
  127   2                      dat<<=1;
  128   2              }
  129   1              IPS200_CS_SIMSPI(1);
  130   1      }
  131          
  132          //-------------------------------------------------------------------------------------------------------
             -------------
  133          //  @brief      1.14寸 IPS液晶初始化
  134          //  @return     void
  135          //  @since      v1.0
  136          //  Sample usage:               
  137          //-------------------------------------------------------------------------------------------------------
             -------------
  138          void ips200_init_simspi(void)
  139          {
  140   1          
  141   1              IPS200_BL_SIMSPI(1);
  142   1              IPS200_DC_SIMSPI(0);
  143   1              IPS200_REST_SIMSPI(0);
  144   1              
  145   1          delay_ms(200);
  146   1          
  147   1          IPS200_REST_SIMSPI(1);
  148   1          delay_ms(100);
  149   1              ips200_writeIndex_simspi(0x11);
  150   1          delay_ms(120);
  151   1          ips200_writeIndex_simspi(0x36);
  152   1          
  153   1          #if (IPS200_DISPLAY_DIR==0)    
  154   1                      ips200_writeData_simspi(0x00);
  155   1          #elif (IPS200_DISPLAY_DIR==1)    
                               ips200_writeData_simspi(0xC0);
                   #elif (IPS200_DISPLAY_DIR==2)    
                               ips200_writeData_simspi(0x70);
                   #else                               
                               ips200_writeData_simspi(0xA0);
                   #endif
  162   1          ips200_writeIndex_simspi(0x3A); 
  163   1          ips200_writeData_simspi(0x05);
  164   1      
  165   1          ips200_writeIndex_simspi(0xB2);
  166   1          ips200_writeData_simspi(0x0C);
  167   1          ips200_writeData_simspi(0x0C);
  168   1          ips200_writeData_simspi(0x00);
  169   1          ips200_writeData_simspi(0x33);
  170   1          ips200_writeData_simspi(0x33); 
  171   1      
  172   1          ips200_writeIndex_simspi(0xB7); 
  173   1          ips200_writeData_simspi(0x35);  
  174   1      
  175   1          ips200_writeIndex_simspi(0xBB);
  176   1          ips200_writeData_simspi(0x29);
C251 COMPILER V5.60.0,  SEEKFREE_IPS200_SPI                                                19/07/23  21:09:11  PAGE 4   

  177   1      
  178   1      //    ips200_writeIndex_simspi(0xC0);
  179   1      //    ips200_writeData_simspi(0x2C);
  180   1      
  181   1          ips200_writeIndex_simspi(0xC2);
  182   1          ips200_writeData_simspi(0x01);
  183   1      
  184   1          ips200_writeIndex_simspi(0xC3);
  185   1          ips200_writeData_simspi(0x19);   
  186   1      
  187   1          ips200_writeIndex_simspi(0xC4);
  188   1          ips200_writeData_simspi(0x20);  
  189   1      
  190   1          ips200_writeIndex_simspi(0xC5);
  191   1          ips200_writeData_simspi(0x1A); 
  192   1              
  193   1          ips200_writeIndex_simspi(0xC6); 
  194   1          ips200_writeData_simspi(0x0F);    
  195   1      
  196   1          ips200_writeIndex_simspi(0xD0); 
  197   1          ips200_writeData_simspi(0xA4);
  198   1          ips200_writeData_simspi(0xA1);
  199   1      
  200   1          ips200_writeIndex_simspi(0xE0);
  201   1          ips200_writeData_simspi(0xD0);
  202   1          ips200_writeData_simspi(0x08);
  203   1          ips200_writeData_simspi(0x0E);
  204   1          ips200_writeData_simspi(0x09);
  205   1          ips200_writeData_simspi(0x09);
  206   1          ips200_writeData_simspi(0x05);
  207   1          ips200_writeData_simspi(0x31);
  208   1          ips200_writeData_simspi(0x33);
  209   1          ips200_writeData_simspi(0x48);
  210   1          ips200_writeData_simspi(0x17);
  211   1          ips200_writeData_simspi(0x14);
  212   1          ips200_writeData_simspi(0x15);
  213   1          ips200_writeData_simspi(0x31);
  214   1          ips200_writeData_simspi(0x34);
  215   1      
  216   1          ips200_writeIndex_simspi(0xE1);
  217   1          ips200_writeData_simspi(0xD0);
  218   1          ips200_writeData_simspi(0x08);
  219   1          ips200_writeData_simspi(0x0E);
  220   1          ips200_writeData_simspi(0x09);
  221   1          ips200_writeData_simspi(0x09);
  222   1          ips200_writeData_simspi(0x15);
  223   1          ips200_writeData_simspi(0x31);
  224   1          ips200_writeData_simspi(0x33);
  225   1          ips200_writeData_simspi(0x48);
  226   1          ips200_writeData_simspi(0x17);
  227   1          ips200_writeData_simspi(0x14);
  228   1          ips200_writeData_simspi(0x15);
  229   1          ips200_writeData_simspi(0x31);
  230   1          ips200_writeData_simspi(0x34);
  231   1      
  232   1          ips200_writeIndex_simspi(0x21); 
  233   1      
  234   1          ips200_writeIndex_simspi(0x29);
  235   1          ips200_clear_simspi(IPS200_BGCOLOR);
  236   1      }
  237          
  238          
  239          
  240          void ips200_set_region_simspi(uint16 x1,uint16 y1,uint16 x2,uint16 y2)
  241          {
  242   1              #if(IPS200_DISPLAY_DIR==0)
C251 COMPILER V5.60.0,  SEEKFREE_IPS200_SPI                                                19/07/23  21:09:11  PAGE 5   

  243   1              {
  244   2                      ips200_writeIndex_simspi(0x2a);//列地址设置
  245   2                      ips200_writeDatai_16bit_simspi(x1);
  246   2                      ips200_writeDatai_16bit_simspi(x2);
  247   2                      ips200_writeIndex_simspi(0x2b);//行地址设置
  248   2                      ips200_writeDatai_16bit_simspi(y1);
  249   2                      ips200_writeDatai_16bit_simspi(y2);
  250   2                      ips200_writeIndex_simspi(0x2c);//储存器写
  251   2              }
  252   1              #elif(IPS200_DISPLAY_DIR==1)
                       {
                               ips200_writeIndex_simspi(0x2a);//列地址设置
                               ips200_writeDatai_16bit_simspi(x1);
                               ips200_writeDatai_16bit_simspi(x2);
                               ips200_writeIndex_simspi(0x2b);//行地址设置
                               ips200_writeDatai_16bit_simspi(y1);
                               ips200_writeDatai_16bit_simspi(y2);
                               ips200_writeIndex_simspi(0x2c);//储存器写
                       }
                       #elif(IPS200_DISPLAY_DIR==2)
                       {
                               ips200_writeIndex_simspi(0x2a);//列地址设置
                               ips200_writeDatai_16bit_simspi(x1);
                               ips200_writeDatai_16bit_simspi(x2);
                               ips200_writeIndex_simspi(0x2b);//行地址设置
                               ips200_writeDatai_16bit_simspi(y1);
                               ips200_writeDatai_16bit_simspi(y2);
                               ips200_writeIndex_simspi(0x2c);//储存器写
                       }
                       #else
                       {
                               ips200_writeIndex_simspi(0x2a);//列地址设置
                               ips200_writeDatai_16bit_simspi(x1);
                               ips200_writeDatai_16bit_simspi(x2);
                               ips200_writeIndex_simspi(0x2b);//行地址设置
                               ips200_writeDatai_16bit_simspi(y1);
                               ips200_writeDatai_16bit_simspi(y2);
                               ips200_writeIndex_simspi(0x2c);//储存器写
                       }
                       #endif
  283   1      }
  284          
  285          //-------------------------------------------------------------------------------------------------------
             -------------
  286          //  @brief      液晶清屏函数
  287          //  @param      color                   颜色设置
  288          //  @return     void
  289          //  @since      v1.0
  290          //  Sample usage:               ips200_clear(YELLOW);// 全屏设置为黄色
  291          //-------------------------------------------------------------------------------------------------------
             -------------
  292          void ips200_clear_simspi(uint16 color)
  293          {
  294   1          uint16 i,j;
  295   1              ips200_set_region_simspi(0,0,IPS200_X_MAX-1,IPS200_Y_MAX-1);
  296   1          for(i=0;i<IPS200_X_MAX;i++)
  297   1          {
  298   2              for (j=0;j<IPS200_Y_MAX;j++)
  299   2                      {
  300   3                      ips200_writeDatai_16bit_simspi(color);                           
  301   3                  }
  302   2          }
  303   1      }
  304          
  305          //-------------------------------------------------------------------------------------------------------
             -------------
C251 COMPILER V5.60.0,  SEEKFREE_IPS200_SPI                                                19/07/23  21:09:11  PAGE 6   

  306          //  @brief      液晶画点
  307          //  @param      x               坐标x方向的起点
  308          //  @param      y               坐标y方向的起点
  309          //  @param      dat                 需要显示的颜色
  310          //  @return     void
  311          //  @since      v1.0
  312          //  Sample usage:               ips200_drawpoint(0,0,RED);  //坐标0,0画一个红色的点
  313          //-------------------------------------------------------------------------------------------------------
             -------------
  314          void ips200_drawpoint_simspi(uint16 x,uint16 y,uint16 color)
  315          {
  316   1          ips200_set_region_simspi(x,y,x,y);
  317   1          ips200_writeDatai_16bit_simspi(color);
  318   1      }
  319          
  320          
  321          
  322          //-------------------------------------------------------------------------------------------------------
             -------------
  323          //  @brief      液晶显示字符
  324          //  @param      x               坐标x方向的起点 参数范围 0 -（IPS200_X_MAX-1）
  325          //  @param      y               坐标y方向的起点 参数范围 0 -（IPS200_Y_MAX/16-1）
  326          //  @param      dat                 需要显示的字符
  327          //  @return     void
  328          //  @since      v1.0
  329          //  Sample usage:               ips200_showchar(0,0,'x');//坐标0,0写一个字符x
  330          //-------------------------------------------------------------------------------------------------------
             -------------
  331          void ips200_showchar_simspi(uint16 x,uint16 y,const int8 dat)
  332          {
  333   1              uint8 i,j;
  334   1              uint8 temp;
  335   1          
  336   1              for(i=0; i<16; i++)
  337   1              {
  338   2                      ips200_set_region_simspi(x,y+i,x+7,y+i);
  339   2                      temp = tft_ascii[dat-32][i];//减32因为是取模是从空格开始取得 空格在ascii中序号是32
  340   2                      for(j=0; j<8; j++)
  341   2                      {
  342   3                              if(temp&0x01)   
  343   3                  {
  344   4                      ips200_writeDatai_16bit_simspi(IPS200_PENCOLOR);
  345   4                  }
  346   3                              else                    ips200_writeDatai_16bit_simspi(IPS200_BGCOLOR);
  347   3                              temp>>=1;
  348   3                      }
  349   2              }
  350   1      }
  351          
  352          //-------------------------------------------------------------------------------------------------------
             -------------
  353          //  @brief      液晶显示字符串
  354          //  @param      x               坐标x方向的起点  参数范围 0 -（IPS200_X_MAX-1）
  355          //  @param      y               坐标y方向的起点  参数范围 0 -（IPS200_Y_MAX/16-1）
  356          //  @param      dat                 需要显示的字符串
  357          //  @return     void
  358          //  @since      v1.0
  359          //  Sample usage:               ips200_showstr(0,0,"seekfree");
  360          //-------------------------------------------------------------------------------------------------------
             -------------
  361          void ips200_showstr_simspi(uint16 x,uint16 y,const int8 dat[])
  362          {
  363   1              uint16 j;
  364   1              
  365   1              j = 0;
  366   1              while(dat[j] != '\0')
C251 COMPILER V5.60.0,  SEEKFREE_IPS200_SPI                                                19/07/23  21:09:11  PAGE 7   

  367   1              {
  368   2                      ips200_showchar_simspi(x+8*j,y*16,dat[j]);
  369   2                      j++;
  370   2              }
  371   1      }
  372          
  373          //-------------------------------------------------------------------------------------------------------
             -------------
  374          //  @brief      液晶显示8位有符号
  375          //  @param      x               坐标x方向的起点  参数范围 0 -（IPS200_X_MAX-1）
  376          //  @param      y               坐标y方向的起点  参数范围 0 -（IPS200_Y_MAX/16-1）
  377          //  @param      dat                 需要显示的变量，数据类型int8
  378          //  @return     void
  379          //  @since      v1.0
  380          //  Sample usage:               ips200_showint8(0,0,x);//x为int8类型
  381          //-------------------------------------------------------------------------------------------------------
             -------------
  382          void ips200_showint8_simspi(uint16 x,uint16 y,int8 dat)
  383          {
  384   1              uint8 a[3];
  385   1              uint8 i;
  386   1              if(dat<0)
  387   1              {
  388   2                      ips200_showchar_simspi(x,y*16,'-');
  389   2                      dat = -dat;
  390   2              }
  391   1              else    ips200_showchar_simspi(x,y*16,' ');
  392   1              
  393   1              a[0] = dat/100;
  394   1              a[1] = dat/10%10;
  395   1              a[2] = dat%10;
  396   1              i = 0;
  397   1              while(i<3)
  398   1              {
  399   2                      ips200_showchar_simspi((uint8)(x+(8*(i+1))), (uint8)(y*16),(int8)('0' + a[i]));
  400   2                      i++;
  401   2              }
  402   1      }
  403          
  404          //-------------------------------------------------------------------------------------------------------
             -------------
  405          //  @brief      液晶显示8位无符号
  406          //  @param      x               坐标x方向的起点 参数范围 0 -（IPS200_X_MAX-1）
  407          //  @param      y               坐标y方向的起点 参数范围 0 -（IPS200_Y_MAX/16-1）
  408          //  @param      dat                 需要显示的变量，数据类型uint8
  409          //  @return     void
  410          //  @since      v1.0
  411          //  Sample usage:               ips200_showuint8(0,0,x);//x为uint8类型
  412          //-------------------------------------------------------------------------------------------------------
             -------------
  413          void ips200_showuint8_simspi(uint16 x,uint16 y,uint8 dat)
  414          {
  415   1              uint8 a[3];
  416   1              uint8 i;
  417   1              
  418   1              a[0] = dat/100;
  419   1              a[1] = dat/10%10;
  420   1              a[2] = dat%10;
  421   1              i = 0;
  422   1              while(i<3)
  423   1              {
  424   2                      ips200_showchar_simspi((uint8)(x+(8*(i+1))), (uint8)(y*16),(int8)('0' + a[i]));
  425   2                      i++;
  426   2              }
  427   1              
  428   1      }
C251 COMPILER V5.60.0,  SEEKFREE_IPS200_SPI                                                19/07/23  21:09:11  PAGE 8   

  429          
  430          //-------------------------------------------------------------------------------------------------------
             -------------
  431          //  @brief      液晶显示16位有符号
  432          //  @param      x               坐标x方向的起点 参数范围 0 -（IPS200_X_MAX-1）
  433          //  @param      y               坐标y方向的起点 参数范围 0 -（IPS200_Y_MAX/16-1）
  434          //  @param      dat                 需要显示的变量，数据类型int16
  435          //  @return     void
  436          //  @since      v1.0
  437          //  Sample usage:               ips200_showint16(0,0,x);//x为int16类型
  438          //-------------------------------------------------------------------------------------------------------
             -------------
  439          void ips200_showint16_simspi(uint16 x,uint16 y,int16 dat)
  440          {
  441   1              uint8 a[5];
  442   1              uint8 i;
  443   1              if(dat<0)
  444   1              {
  445   2                      ips200_showchar_simspi(x,y*16,'-');
  446   2                      dat = -dat;
  447   2              }
  448   1              else    ips200_showchar_simspi(x,y*16,' ');
  449   1      
  450   1              a[0] = dat/10000;
  451   1              a[1] = dat/1000%10;
  452   1              a[2] = dat/100%10;
  453   1              a[3] = dat/10%10;
  454   1              a[4] = dat%10;
  455   1              
  456   1              i = 0;
  457   1              while(i<5)
  458   1              {
  459   2                      ips200_showchar_simspi((uint8)(x+(8*(i+1))), (uint8)(y*16),(int8)('0' + a[i]));
  460   2                      i++;
  461   2              }
  462   1      }
  463          
  464          //-------------------------------------------------------------------------------------------------------
             -------------
  465          //  @brief      液晶显示16位无符号
  466          //  @param      x               坐标x方向的起点 参数范围 0 -（IPS200_X_MAX-1）
  467          //  @param      y               坐标y方向的起点 参数范围 0 -（IPS200_Y_MAX/16-1）
  468          //  @param      dat                 需要显示的变量，数据类型uint16
  469          //  @return     void
  470          //  @since      v1.0
  471          //  Sample usage:               ips200_showuint16(0,0,x);//x为uint16类型
  472          //-------------------------------------------------------------------------------------------------------
             -------------
  473          void ips200_showuint16_simspi(uint16 x,uint16 y,uint16 dat)
  474          {
  475   1              uint8 a[5];
  476   1              uint8 i;
  477   1      
  478   1              a[0] = dat/10000;
  479   1              a[1] = dat/1000%10;
  480   1              a[2] = dat/100%10;
  481   1              a[3] = dat/10%10;
  482   1              a[4] = dat%10;
  483   1              
  484   1              i = 0;
  485   1              while(i<5)
  486   1              {
  487   2                      ips200_showchar_simspi((uint8)(x+(8*(i+1))), (uint8)(y*16),(int8)('0' + a[i]));
  488   2                      i++;
  489   2              }
  490   1      }
C251 COMPILER V5.60.0,  SEEKFREE_IPS200_SPI                                                19/07/23  21:09:11  PAGE 9   

  491          
  492          //-------------------------------------------------------------------------------------------------------
             -------------
  493          //  @brief      液晶显示32位有符号(去除整数部分无效的0)
  494          //  @param      x               坐标x方向的起点 参数范围 0 -（IPS200_X_MAX-1）
  495          //  @param      y               坐标y方向的起点 参数范围 0 -（IPS200_Y_MAX/16-1）
  496          //  @param      dat                 需要显示的变量，数据类型uint32
  497          //  @param      num                 需要显示的位数 最高10位  不包含正负号
  498          //  @return     void
  499          //  @since      v1.0
  500          //  Sample usage:               ips200_showuint32(0,0,x,3);//x可以为int32 uint16 int16 uint8 int8类型
  501          //  Sample usage:               负数会显示一个 ‘-’号   正数显示一个空格
  502          //-------------------------------------------------------------------------------------------------------
             -------------
  503          void ips200_showint32_simspi(uint16 x,uint16 y,int32 dat,uint8 num)
  504          {
  505   1          int8    buff[34];
  506   1          uint8   length;
  507   1          
  508   1          if(10<num)      num = 10;
  509   1          
  510   1          num++;
  511   1          if(0>dat)   length = zf_sprintf( &buff[0],"%d",dat);//负数
  512   1          else
  513   1          {
  514   2              buff[0] = ' ';
  515   2              length = zf_sprintf( &buff[1],"%d",dat);
  516   2              length++;
  517   2          }
  518   1          while(length < num)
  519   1          {
  520   2              buff[length] = ' ';
  521   2              length++;
  522   2          }
  523   1          buff[num] = '\0';
  524   1      
  525   1          ips200_showstr_simspi(x, y, buff);  //显示数字
  526   1      }
  527          
  528          
  529          //-------------------------------------------------------------------------------------------------------
             -------------
  530          //  @brief      液晶显示浮点数(去除整数部分无效的0)
  531          //  @param      x               坐标x方向的起点 参数范围 0 -（IPS200_X_MAX-1）
  532          //  @param      y               坐标y方向的起点 参数范围 0 -（IPS200_Y_MAX/16-1）
  533          //  @param      dat                 需要显示的变量，数据类型float或double
  534          //  @param      num                 整数位显示长度   最高10位  
  535          //  @param      pointnum        小数位显示长度   最高6位
  536          //  @return     void
  537          //  @since      v1.0
  538          //  Sample usage:               ips200_showfloat(0,0,x,2,3);//显示浮点数   整数显示2位   小数显示三位
  539          //  @note                       特别注意当发现小数部分显示的值与你写入的值不一样的时候，
  540          //                              可能是由于浮点数精度丢失问题导致的，这并不是显示函数的问题，
  541          //                              有关问题的详情，请自行百度学习   浮点数精度丢失问题。
  542          //                              负数会显示一个 ‘-’号   正数显示一个空格
  543          //-------------------------------------------------------------------------------------------------------
             -------------
  544          void ips200_showfloat_simspi(uint16 x,uint16 y,double dat,uint8 num,uint8 pointnum)
  545          {
  546   1          uint8   length;
  547   1              int8    buff[34];
  548   1              int8    start,end,point;
  549   1      
  550   1              if(6<pointnum)  pointnum = 6;
  551   1          if(10<num)      num = 10;
  552   1              
C251 COMPILER V5.60.0,  SEEKFREE_IPS200_SPI                                                19/07/23  21:09:11  PAGE 10  

  553   1          if(0>dat)   length = zf_sprintf( &buff[0],"%f",dat);//负数
  554   1          else
  555   1          {
  556   2              length = zf_sprintf( &buff[1],"%f",dat);
  557   2              length++;
  558   2          }
  559   1          point = length - 7;         //计算小数点位置
  560   1          start = point - num - 1;    //计算起始位
  561   1          end = point + pointnum + 1; //计算结束位
  562   1          while(0>start)//整数位不够  末尾应该填充空格
  563   1          {
  564   2              buff[end] = ' ';
  565   2              end++;
  566   2              start++;
  567   2          }
  568   1          
  569   1          if(0>dat)   buff[start] = '-';
  570   1          else        buff[start] = ' ';
  571   1          
  572   1          buff[end] = '\0';
  573   1      
  574   1          ips200_showstr_simspi(x, y, buff);  //显示数字
  575   1      }
  576          
  577          
  578          
  579          
  580          //-------------------------------------------------------------------------------------------------------
             -------------
  581          //  以下函数是使用硬件SPI通信，相比较软件IIC，速度比软件IIC快。
  582          //-------------------------------------------------------------------------------------------------------
             -------------
  583          
  584          
  585          
  586          
  587          //-------------------------------------------------------------------------------------------------------
             -------------
  588          //  @brief      内部调用，用户无需关心
  589          //  @param      void                
  590          //  @return                                     
  591          //  @since      v1.0
  592          //  Sample usage:               
  593          //-------------------------------------------------------------------------------------------------------
             -------------
  594          void ips200_writeIndex(uint8 dat)                       //写命令
  595          {       
  596   1              IPS200_CS(0);
  597   1          IPS200_DC(0);
  598   1      
  599   1              spi_mosi(dat);
  600   1              IPS200_CS(1);
  601   1      }
  602          
  603          //-------------------------------------------------------------------------------------------------------
             -------------
  604          //  @brief      内部调用，用户无需关心
  605          //  @param      void                
  606          //  @return                                     
  607          //  @since      v1.0
  608          //  Sample usage:               
  609          //-------------------------------------------------------------------------------------------------------
             -------------
  610          void ips200_writeData(uint8 dat)                        //写数据
  611          {
  612   1              IPS200_CS(0);
C251 COMPILER V5.60.0,  SEEKFREE_IPS200_SPI                                                19/07/23  21:09:11  PAGE 11  

  613   1          IPS200_DC(1);
  614   1      
  615   1              spi_mosi(dat);
  616   1              IPS200_CS(1);
  617   1      }
  618          
  619          //-------------------------------------------------------------------------------------------------------
             -------------
  620          //  @brief      内部调用，用户无需关心
  621          //  @param      void                
  622          //  @return                                     
  623          //  @since      v1.0
  624          //  Sample usage:               
  625          //-------------------------------------------------------------------------------------------------------
             -------------
  626          void ips200_writedata_16bit(uint16 dat) //向液晶屏写一个16位数据
  627          {
  628   1          uint8 dat1[2];
  629   1          dat1[0] = dat >> 8;
  630   1          dat1[1] = (uint8)dat;
  631   1              IPS200_CS(0);
  632   1          IPS200_DC(1);
  633   1              spi_mosi(dat1[0]);      //写入数据  高位在前  低位在后
  634   1              spi_mosi(dat1[1]);
  635   1              IPS200_CS(1);
  636   1      }
  637          
  638          //-------------------------------------------------------------------------------------------------------
             -------------
  639          //  @brief      1.14寸 IPS液晶初始化
  640          //  @return     void
  641          //  @since      v1.0
  642          //  Sample usage:               
  643          //-------------------------------------------------------------------------------------------------------
             -------------
  644          void ips200_init(void)
  645          {
  646   1          spi_init(IPS200_SPIN_PIN, IPS200_SCL_PIN, IPS200_SDA_PIN, IPS200_SDA_IN_PIN, 0, MASTER, SPI_SYSclk_DI
             -V_4);
  647   1      
  648   1              IPS200_BL(1);
  649   1              IPS200_DC(0);
  650   1              IPS200_REST(0);
  651   1              
  652   1          delay_ms(200);
  653   1          
  654   1          IPS200_REST(1);
  655   1          delay_ms(100);
  656   1              ips200_writeIndex(0x11);
  657   1              delay_ms(100);
  658   1          ips200_writeIndex(0x36);
  659   1          
  660   1          #if (IPS200_DISPLAY_DIR==0)    
  661   1                      ips200_writeData(0x00);
  662   1          #elif (IPS200_DISPLAY_DIR==1)    
                               ips200_writeData(0xC0);
                   #elif (IPS200_DISPLAY_DIR==2)    
                               ips200_writeData(0x70);
                   #else                            
                               ips200_writeData(0xA0);
                   #endif
  669   1              
  670   1          ips200_writeIndex(0x3A); 
  671   1          ips200_writeData(0x05);
  672   1      
  673   1          ips200_writeIndex(0xB2);
C251 COMPILER V5.60.0,  SEEKFREE_IPS200_SPI                                                19/07/23  21:09:11  PAGE 12  

  674   1          ips200_writeData(0x0C);
  675   1          ips200_writeData(0x0C);
  676   1          ips200_writeData(0x00);
  677   1          ips200_writeData(0x33);
  678   1          ips200_writeData(0x33); 
  679   1      
  680   1          ips200_writeIndex(0xB7); 
  681   1          ips200_writeData(0x35);  
  682   1      
  683   1          ips200_writeIndex(0xBB);
  684   1          ips200_writeData(0x29);
  685   1      
  686   1      //    ips200_writeIndex(0xC0);
  687   1      //    ips200_writeData(0x2C);
  688   1      
  689   1          ips200_writeIndex(0xC2);
  690   1          ips200_writeData(0x01);
  691   1      
  692   1          ips200_writeIndex(0xC3);
  693   1          ips200_writeData(0x19);   
  694   1      
  695   1          ips200_writeIndex(0xC4);
  696   1          ips200_writeData(0x20);  
  697   1      
  698   1              ips200_writeIndex(0xC5);
  699   1          ips200_writeData(0x1A);
  700   1              
  701   1          ips200_writeIndex(0xC6); 
  702   1          ips200_writeData(0x0F);    
  703   1      
  704   1          ips200_writeIndex(0xD0); 
  705   1          ips200_writeData(0xA4);
  706   1          ips200_writeData(0xA1);
  707   1      
  708   1          ips200_writeIndex(0xE0);
  709   1          ips200_writeData(0xD0);
  710   1          ips200_writeData(0x08);
  711   1          ips200_writeData(0x0E);
  712   1          ips200_writeData(0x09);
  713   1          ips200_writeData(0x09);
  714   1          ips200_writeData(0x05);
  715   1          ips200_writeData(0x31);
  716   1          ips200_writeData(0x33);
  717   1          ips200_writeData(0x48);
  718   1          ips200_writeData(0x17);
  719   1          ips200_writeData(0x14);
  720   1          ips200_writeData(0x15);
  721   1          ips200_writeData(0x31);
  722   1          ips200_writeData(0x34);
  723   1      
  724   1          ips200_writeIndex(0xE1);
  725   1          ips200_writeData(0xD0);
  726   1          ips200_writeData(0x08);
  727   1          ips200_writeData(0x0E);
  728   1          ips200_writeData(0x09);
  729   1          ips200_writeData(0x09);
  730   1          ips200_writeData(0x15);
  731   1          ips200_writeData(0x31);
  732   1          ips200_writeData(0x33);
  733   1          ips200_writeData(0x48);
  734   1          ips200_writeData(0x17);
  735   1          ips200_writeData(0x14);
  736   1          ips200_writeData(0x15);
  737   1          ips200_writeData(0x31);
  738   1          ips200_writeData(0x34);
  739   1      
C251 COMPILER V5.60.0,  SEEKFREE_IPS200_SPI                                                19/07/23  21:09:11  PAGE 13  

  740   1          ips200_writeIndex(0x21); 
  741   1      
  742   1          ips200_writeIndex(0x29);
  743   1          ips200_clear(IPS200_BGCOLOR);
  744   1      }
  745          
  746          
  747          
  748          void ips200_set_region(uint16 x1,uint16 y1,uint16 x2,uint16 y2)
  749          {
  750   1              #if(IPS200_DISPLAY_DIR==0)
  751   1              {
  752   2                      ips200_writeIndex(0x2a);//列地址设置
  753   2                      ips200_writedata_16bit(x1);
  754   2                      ips200_writedata_16bit(x2);
  755   2                      ips200_writeIndex(0x2b);//行地址设置
  756   2                      ips200_writedata_16bit(y1);
  757   2                      ips200_writedata_16bit(y2);
  758   2                      ips200_writeIndex(0x2c);//储存器写
  759   2              }
  760   1              #elif(IPS200_DISPLAY_DIR==1)
                       {
                               ips200_writeIndex(0x2a);//列地址设置
                               ips200_writedata_16bit(x1);
                               ips200_writedata_16bit(x2);
                               ips200_writeIndex(0x2b);//行地址设置
                               ips200_writedata_16bit(y1);
                               ips200_writedata_16bit(y2);
                               ips200_writeIndex(0x2c);//储存器写
                       }
                       #elif(IPS200_DISPLAY_DIR==2)
                       {
                               ips200_writeIndex(0x2a);//列地址设置
                               ips200_writedata_16bit(x1);
                               ips200_writedata_16bit(x2);
                               ips200_writeIndex(0x2b);//行地址设置
                               ips200_writedata_16bit(y1);
                               ips200_writedata_16bit(y2);
                               ips200_writeIndex(0x2c);//储存器写
                       }
                       #else
                       {
                               ips200_writeIndex(0x2a);//列地址设置
                               ips200_writedata_16bit(x1);
                               ips200_writedata_16bit(x2);
                               ips200_writeIndex(0x2b);//行地址设置
                               ips200_writedata_16bit(y1);
                               ips200_writedata_16bit(y2);
                               ips200_writeIndex(0x2c);//储存器写
                       }
                       #endif
  791   1      }
  792          
  793          //-------------------------------------------------------------------------------------------------------
             -------------
  794          //  @brief      液晶清屏函数
  795          //  @param      color                   颜色设置
  796          //  @return     void
  797          //  @since      v1.0
  798          //  Sample usage:               ips200_clear(YELLOW);// 全屏设置为黄色
  799          //-------------------------------------------------------------------------------------------------------
             -------------
  800          void ips200_clear(uint16 color)
  801          {
  802   1          uint16 i,j;
  803   1              ips200_set_region(0,0,IPS200_X_MAX-1,IPS200_Y_MAX-1);
C251 COMPILER V5.60.0,  SEEKFREE_IPS200_SPI                                                19/07/23  21:09:11  PAGE 14  

  804   1          for(i=0;i<IPS200_X_MAX;i++)
  805   1          {
  806   2              for (j=0;j<IPS200_Y_MAX;j++)
  807   2                      {
  808   3                      ips200_writedata_16bit(color);                           
  809   3                  }
  810   2          }
  811   1      }
  812          
  813          //-------------------------------------------------------------------------------------------------------
             -------------
  814          //  @brief      液晶画点
  815          //  @param      x               坐标x方向的起点
  816          //  @param      y               坐标y方向的起点
  817          //  @param      dat                 需要显示的颜色
  818          //  @return     void
  819          //  @since      v1.0
  820          //  Sample usage:               ips200_drawpoint(0,0,RED);  //坐标0,0画一个红色的点
  821          //-------------------------------------------------------------------------------------------------------
             -------------
  822          void ips200_drawpoint(uint16 x,uint16 y,uint16 color)
  823          {
  824   1          ips200_set_region(x,y,x,y);
  825   1          ips200_writedata_16bit(color);
  826   1      }
  827          
  828          
  829          
  830          //-------------------------------------------------------------------------------------------------------
             -------------
  831          //  @brief      液晶显示字符
  832          //  @param      x               坐标x方向的起点 参数范围 0 -（IPS200_X_MAX-1）
  833          //  @param      y               坐标y方向的起点 参数范围 0 -（IPS200_Y_MAX/16-1）
  834          //  @param      dat                 需要显示的字符
  835          //  @return     void
  836          //  @since      v1.0
  837          //  Sample usage:               ips200_showchar(0,0,'x');//坐标0,0写一个字符x
  838          //-------------------------------------------------------------------------------------------------------
             -------------
  839          void ips200_showchar(uint16 x,uint16 y,const int8 dat)
  840          {
  841   1              uint8 i,j;
  842   1              uint8 temp;
  843   1          
  844   1              for(i=0; i<16; i++)
  845   1              {
  846   2                      ips200_set_region(x,y+i,x+7,y+i);
  847   2                      temp = tft_ascii[dat-32][i];//减32因为是取模是从空格开始取得 空格在ascii中序号是32
  848   2                      for(j=0; j<8; j++)
  849   2                      {
  850   3                              if(temp&0x01)   
  851   3                  {
  852   4                      ips200_writedata_16bit(IPS200_PENCOLOR);
  853   4                  }
  854   3                              else                    ips200_writedata_16bit(IPS200_BGCOLOR);
  855   3                              temp>>=1;
  856   3                      }
  857   2              }
  858   1      }
  859          
  860          //-------------------------------------------------------------------------------------------------------
             -------------
  861          //  @brief      液晶显示字符串
  862          //  @param      x               坐标x方向的起点  参数范围 0 -（IPS200_X_MAX-1）
  863          //  @param      y               坐标y方向的起点  参数范围 0 -（IPS200_Y_MAX/16-1）
  864          //  @param      dat                 需要显示的字符串
C251 COMPILER V5.60.0,  SEEKFREE_IPS200_SPI                                                19/07/23  21:09:11  PAGE 15  

  865          //  @return     void
  866          //  @since      v1.0
  867          //  Sample usage:               ips200_showstr(0,0,"seekfree");
  868          //-------------------------------------------------------------------------------------------------------
             -------------
  869          void ips200_showstr(uint16 x,uint16 y,const int8 dat[])
  870          {
  871   1              uint16 j;
  872   1              
  873   1              j = 0;
  874   1              while(dat[j] != '\0')
  875   1              {
  876   2                      ips200_showchar(x+8*j,y*16,dat[j]);
  877   2                      j++;
  878   2              }
  879   1      }
  880          
  881          //-------------------------------------------------------------------------------------------------------
             -------------
  882          //  @brief      液晶显示8位有符号
  883          //  @param      x               坐标x方向的起点  参数范围 0 -（IPS200_X_MAX-1）
  884          //  @param      y               坐标y方向的起点  参数范围 0 -（IPS200_Y_MAX/16-1）
  885          //  @param      dat                 需要显示的变量，数据类型int8
  886          //  @return     void
  887          //  @since      v1.0
  888          //  Sample usage:               ips200_showint8(0,0,x);//x为int8类型
  889          //-------------------------------------------------------------------------------------------------------
             -------------
  890          void ips200_showint8(uint16 x,uint16 y,int8 dat)
  891          {
  892   1              uint8 a[3];
  893   1              uint8 i;
  894   1              if(dat<0)
  895   1              {
  896   2                      ips200_showchar(x,y*16,'-');
  897   2                      dat = -dat;
  898   2              }
  899   1              else    ips200_showchar(x,y*16,' ');
  900   1              
  901   1              a[0] = dat/100;
  902   1              a[1] = dat/10%10;
  903   1              a[2] = dat%10;
  904   1              i = 0;
  905   1              while(i<3)
  906   1              {
  907   2                      ips200_showchar((uint16)(x+(8*(i+1))), (uint16)(y*16),(int8)('0' + a[i]));
  908   2                      i++;
  909   2              }
  910   1      }
  911          
  912          //-------------------------------------------------------------------------------------------------------
             -------------
  913          //  @brief      液晶显示8位无符号
  914          //  @param      x               坐标x方向的起点 参数范围 0 -（IPS200_X_MAX-1）
  915          //  @param      y               坐标y方向的起点 参数范围 0 -（IPS200_Y_MAX/16-1）
  916          //  @param      dat                 需要显示的变量，数据类型uint8
  917          //  @return     void
  918          //  @since      v1.0
  919          //  Sample usage:               ips200_showuint8(0,0,x);//x为uint8类型
  920          //-------------------------------------------------------------------------------------------------------
             -------------
  921          void ips200_showuint8(uint16 x,uint16 y,uint8 dat)
  922          {
  923   1              uint8 a[3];
  924   1              uint8 i;
  925   1              
C251 COMPILER V5.60.0,  SEEKFREE_IPS200_SPI                                                19/07/23  21:09:11  PAGE 16  

  926   1              a[0] = dat/100;
  927   1              a[1] = dat/10%10;
  928   1              a[2] = dat%10;
  929   1              i = 0;
  930   1              while(i<3)
  931   1              {
  932   2                      ips200_showchar((uint16)(x+(8*(i+1))), (uint16)(y*16),(int8)('0' + a[i]));
  933   2                      i++;
  934   2              }
  935   1              
  936   1      }
  937          
  938          //-------------------------------------------------------------------------------------------------------
             -------------
  939          //  @brief      液晶显示16位有符号
  940          //  @param      x               坐标x方向的起点 参数范围 0 -（IPS200_X_MAX-1）
  941          //  @param      y               坐标y方向的起点 参数范围 0 -（IPS200_Y_MAX/16-1）
  942          //  @param      dat                 需要显示的变量，数据类型int16
  943          //  @return     void
  944          //  @since      v1.0
  945          //  Sample usage:               ips200_showint16(0,0,x);//x为int16类型
  946          //-------------------------------------------------------------------------------------------------------
             -------------
  947          void ips200_showint16(uint16 x,uint16 y,int16 dat)
  948          {
  949   1              uint8 a[5];
  950   1              uint8 i;
  951   1              if(dat<0)
  952   1              {
  953   2                      ips200_showchar(x,y*16,'-');
  954   2                      dat = -dat;
  955   2              }
  956   1              else    ips200_showchar(x,y*16,' ');
  957   1      
  958   1              a[0] = dat/10000;
  959   1              a[1] = dat/1000%10;
  960   1              a[2] = dat/100%10;
  961   1              a[3] = dat/10%10;
  962   1              a[4] = dat%10;
  963   1              
  964   1              i = 0;
  965   1              while(i<5)
  966   1              {
  967   2                      ips200_showchar((uint16)(x+(8*(i+1))), (uint16)(y*16),(int8)('0' + a[i]));
  968   2                      i++;
  969   2              }
  970   1      }
  971          
  972          //-------------------------------------------------------------------------------------------------------
             -------------
  973          //  @brief      液晶显示16位无符号
  974          //  @param      x               坐标x方向的起点 参数范围 0 -（IPS200_X_MAX-1）
  975          //  @param      y               坐标y方向的起点 参数范围 0 -（IPS200_Y_MAX/16-1）
  976          //  @param      dat                 需要显示的变量，数据类型uint16
  977          //  @return     void
  978          //  @since      v1.0
  979          //  Sample usage:               ips200_showuint16(0,0,x);//x为uint16类型
  980          //-------------------------------------------------------------------------------------------------------
             -------------
  981          void ips200_showuint16(uint16 x,uint16 y,uint16 dat)
  982          {
  983   1              uint8 a[5];
  984   1              uint8 i;
  985   1      
  986   1              a[0] = dat/10000;
  987   1              a[1] = dat/1000%10;
C251 COMPILER V5.60.0,  SEEKFREE_IPS200_SPI                                                19/07/23  21:09:11  PAGE 17  

  988   1              a[2] = dat/100%10;
  989   1              a[3] = dat/10%10;
  990   1              a[4] = dat%10;
  991   1              
  992   1              i = 0;
  993   1              while(i<5)
  994   1              {
  995   2                      ips200_showchar((uint8)(x+(8*(i+1))), (uint8)(y*16),(int8)('0' + a[i]));
  996   2                      i++;
  997   2              }
  998   1      }
  999          
 1000          //-------------------------------------------------------------------------------------------------------
             -------------
 1001          //  @brief      液晶显示32位有符号(去除整数部分无效的0)
 1002          //  @param      x               坐标x方向的起点 参数范围 0 -（IPS200_X_MAX-1）
 1003          //  @param      y               坐标y方向的起点 参数范围 0 -（IPS200_Y_MAX/16-1）
 1004          //  @param      dat                 需要显示的变量，数据类型uint32
 1005          //  @param      num                 需要显示的位数 最高10位  不包含正负号
 1006          //  @return     void
 1007          //  @since      v1.0
 1008          //  Sample usage:               ips200_showuint32(0,0,x,3);//x可以为int32 uint16 int16 uint8 int8类型
 1009          //  Sample usage:               负数会显示一个 ‘-’号   正数显示一个空格
 1010          //-------------------------------------------------------------------------------------------------------
             -------------
 1011          void ips200_showint32(uint16 x,uint16 y,int32 dat,uint8 num)
 1012          {
 1013   1          int8    buff[34];
 1014   1          uint8   length;
 1015   1          
 1016   1          if(10<num)      num = 10;
 1017   1          
 1018   1          num++;
 1019   1          if(0>dat)   length = zf_sprintf( &buff[0],"%d",dat);//负数
 1020   1          else
 1021   1          {
 1022   2              buff[0] = ' ';
 1023   2              length = zf_sprintf( &buff[1],"%d",dat);
 1024   2              length++;
 1025   2          }
 1026   1          while(length < num)
 1027   1          {
 1028   2              buff[length] = ' ';
 1029   2              length++;
 1030   2          }
 1031   1          buff[num] = '\0';
 1032   1      
 1033   1          ips200_showstr(x, y, buff); //显示数字
 1034   1      }
 1035          
 1036          
 1037          //-------------------------------------------------------------------------------------------------------
             -------------
 1038          //  @brief      液晶显示浮点数(去除整数部分无效的0)
 1039          //  @param      x               坐标x方向的起点 参数范围 0 -（IPS200_X_MAX-1）
 1040          //  @param      y               坐标y方向的起点 参数范围 0 -（IPS200_Y_MAX/16-1）
 1041          //  @param      dat                 需要显示的变量，数据类型float或double
 1042          //  @param      num                 整数位显示长度   最高10位  
 1043          //  @param      pointnum        小数位显示长度   最高6位
 1044          //  @return     void
 1045          //  @since      v1.0
 1046          //  Sample usage:               ips200_showfloat(0,0,x,2,3);//显示浮点数   整数显示2位   小数显示三位
 1047          //  @note                       特别注意当发现小数部分显示的值与你写入的值不一样的时候，
 1048          //                              可能是由于浮点数精度丢失问题导致的，这并不是显示函数的问题，
 1049          //                              有关问题的详情，请自行百度学习   浮点数精度丢失问题。
 1050          //                              负数会显示一个 ‘-’号   正数显示一个空格
C251 COMPILER V5.60.0,  SEEKFREE_IPS200_SPI                                                19/07/23  21:09:11  PAGE 18  

 1051          //-------------------------------------------------------------------------------------------------------
             -------------
 1052          void ips200_showfloat(uint16 x,uint16 y,double dat,uint8 num,uint8 pointnum)
 1053          {
 1054   1          uint8   length;
 1055   1              int8    buff[34];
 1056   1              int8    start,end,point;
 1057   1      
 1058   1              if(6<pointnum)  pointnum = 6;
 1059   1          if(10<num)      num = 10;
 1060   1              
 1061   1          if(0>dat)   length = zf_sprintf( &buff[0],"%f",dat);//负数
 1062   1          else
 1063   1          {
 1064   2              length = zf_sprintf( &buff[1],"%f",dat);
 1065   2              length++;
 1066   2          }
 1067   1          point = length - 7;         //计算小数点位置
 1068   1          start = point - num - 1;    //计算起始位
 1069   1          end = point + pointnum + 1; //计算结束位
 1070   1          while(0>start)//整数位不够  末尾应该填充空格
 1071   1          {
 1072   2              buff[end] = ' ';
 1073   2              end++;
 1074   2              start++;
 1075   2          }
 1076   1          
 1077   1          if(0>dat)   buff[start] = '-';
 1078   1          else        buff[start] = ' ';
 1079   1          
 1080   1          buff[end] = '\0';
 1081   1      
 1082   1          ips200_showstr(x, y, buff); //显示数字
 1083   1      }


Module Information          Static   Overlayable
------------------------------------------------
  code size            =      4809     ------
  ecode size           =    ------     ------
  data size            =    ------     ------
  idata size           =    ------     ------
  pdata size           =    ------     ------
  xdata size           =    ------     ------
  xdata-const size     =    ------     ------
  edata size           =       357     ------
  bit size             =    ------     ------
  ebit size            =    ------     ------
  bitaddressable size  =    ------     ------
  ebitaddressable size =    ------     ------
  far data size        =    ------     ------
  huge data size       =    ------     ------
  const size           =    ------     ------
  hconst size          =         6     ------
End of Module Information.


C251 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
